import tkinter as tk
from tkinter import ttk, scrolledtext
import threading
from datetime import datetime

class AFKBotGUI:
    def __init__(self, bot):
        self.bot = bot
        self.root = tk.Tk()
        self.root.title("AFK Bot - –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        self.root.geometry("800x600")
        self.is_running = False
        
        self.setup_gui()
    
    def setup_gui(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ttk.Label(self.root, text="ü§ñ AFK Bot", font=("Arial", 16, "bold"))
        title_label.pack(pady=10)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc_label = ttk.Label(self.root, 
                              text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã\n–∏–º–∏—Ç–∏—Ä—É—è —Ä–∞–±–æ—Ç—É —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ñ–∞–π–ª–æ–º",
                              font=("Arial", 10))
        desc_label.pack(pady=5)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_frame = ttk.LabelFrame(self.root, text="–°—Ç–∞—Ç—É—Å", padding=10)
        self.status_frame.pack(fill="x", padx=10, pady=5)
        
        self.status_label = ttk.Label(self.status_frame, text="‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", font=("Arial", 10))
        self.status_label.pack(side="left")
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.control_frame = ttk.Frame(self.root)
        self.control_frame.pack(fill="x", padx=10, pady=10)
        
        self.start_button = ttk.Button(self.control_frame, text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", 
                                      command=self.start_bot)
        self.start_button.pack(side="left", padx=5)
        
        self.stop_button = ttk.Button(self.control_frame, text="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞", 
                                     command=self.stop_bot, state="disabled")
        self.stop_button.pack(side="left", padx=5)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_frame = ttk.LabelFrame(self.root, text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", padding=10)
        stats_frame.pack(fill="x", padx=10, pady=5)
        
        self.stats_text = tk.Text(stats_frame, height=4, font=("Arial", 9))
        self.stats_text.pack(fill="x")
        self.update_stats()
        
        # –õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π
        log_frame = ttk.LabelFrame(self.root, text="–õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π", padding=10)
        log_frame.pack(fill="both", expand=True, padx=10, pady=5)
        
        self.log_text = scrolledtext.ScrolledText(log_frame, height=15, font=("Arial", 9))
        self.log_text.pack(fill="both", expand=True)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–∞—Ö
        files_frame = ttk.LabelFrame(self.root, text="–§–∞–π–ª—ã", padding=10)
        files_files = ttk.Frame(files_frame)
        files_files.pack(fill="x")
        
        ttk.Label(files_files, text="–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª:").pack(side="left")
        ttk.Label(files_files, text=self.bot.config.TEXT_FILE_PATH, 
                 foreground="blue").pack(side="left", padx=5)
        
        ttk.Label(files_files, text="–õ–æ–≥ —Ñ–∞–π–ª:").pack(side="left", padx=(20,0))
        ttk.Label(files_files, text=self.bot.config.LOG_FILE, 
                 foreground="blue").pack(side="left", padx=5)
        
        files_frame.pack(fill="x", padx=10, pady=5)
        
        # –ü—Ä–æ—Ç–æ–∫–æ–ª –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
        self.root.protocol("WM_DELETE_WINDOW", self.on_closing)
    
    def log_message(self, message):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        self.log_text.insert(tk.END, f"[{timestamp}] {message}\n")
        self.log_text.see(tk.END)
        self.root.update_idletasks()
    
    def update_stats(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        stats = f"""–î–µ–π—Å—Ç–≤–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {self.bot.action_count}
–ò–Ω—Ç–µ—Ä–≤–∞–ª: {self.bot.config.INTERVAL} —Å–µ–∫—É–Ω–¥
–†–µ–∂–∏–º: –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ñ–∞–π–ª–æ–º
–§–∞–π–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {self.bot.config.TEXT_FILE_PATH}"""
        
        self.stats_text.delete(1.0, tk.END)
        self.stats_text.insert(1.0, stats)
    
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        if not self.is_running:
            self.is_running = True
            self.start_button.config(state="disabled")
            self.stop_button.config(state="normal")
            self.status_label.config(text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            
            self.log_message("üöÄ –ó–∞–ø—É—Å–∫ AFK –±–æ—Ç–∞...")
            self.log_message(f"üìÅ –§–∞–π–ª: {self.bot.config.TEXT_FILE_PATH}")
            self.log_message(f"‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {self.bot.config.INTERVAL} —Å–µ–∫")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            self.bot_thread = threading.Thread(target=self.run_bot)
            self.bot_thread.daemon = True
            self.bot_thread.start()
    
    def stop_bot(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞"""
        if self.is_running:
            self.is_running = False
            self.bot.is_running = False
            self.start_button.config(state="normal")
            self.stop_button.config(state="disabled")
            self.status_label.config(text="‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            self.log_message("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
            self.update_stats()
    
    def run_bot(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –±–æ—Ç–∞"""
        self.bot.is_running = True
        self.bot.action_count = 0
        self.bot.start_time = datetime.now()
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç
        self.bot.actions._write_to_log("SYSTEM", "=== AFK BOT STARTED ===")
        
        try:
            while self.bot.is_running and self.is_running:
                self.bot._do_action()
                self.update_stats()
                
                # –ñ–¥–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª, –Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
                for _ in range(self.bot.config.INTERVAL):
                    if not self.bot.is_running or not self.is_running:
                        break
                    self.root.after(1000)  # –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É
                    
        except Exception as e:
            self.log_message(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
        self.bot.stop()
        self.log_message("üëã –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    def on_closing(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        if self.is_running:
            self.stop_bot()
        self.root.destroy()
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç GUI"""
        self.root.mainloop()